name:                impossible
version:             1.0.1
synopsis:            Set of data and type definitions of impossible types. Impossible types are useful when declaring type classes / type families instances that should not be expanded by GHC until a specific type is provided in order to keep the types nice and readable.
-- description:
license:             Apache-2.0
license-file:        LICENSE
author:              Wojciech Danilo
maintainer:          Wojciech Danilo <wojciech.danilo@gmail.com>
stability:           experimental
homepage:            https://github.com/wdanilo/impossible
bug-reports:         https://github.com/wdanilo/impossible/issues
copyright:           Copyright (C) 2015 Wojciech Danilo
category:            Data
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.10


Library
  hs-source-dirs:     src
  ghc-options:        -Wall -O2
  default-language:   Haskell2010

  default-extensions: ConstraintKinds
                      DataKinds
                      DefaultSignatures
                      DeriveDataTypeable
                      DeriveFoldable
                      DeriveFunctor
                      DeriveGeneric
                      DeriveTraversable
                      DoAndIfThenElse
                      EmptyDataDecls
                      FlexibleContexts
                      FlexibleInstances
                      GeneralizedNewtypeDeriving
                      InstanceSigs
                      LambdaCase
                      MultiParamTypeClasses
                      OverloadedStrings
                      StandaloneDeriving
                      TemplateHaskell
                      TupleSections
                      TypeOperators
                      ViewPatterns
                      TypeFamilies

  exposed-modules:    `findmodules('src', '.*\.hs')`

  build-depends:      base >=4.6 && <4.10
                    , lens
