-- This file has been generated from package.yaml by hpack version 0.14.0.
--
-- see: https://github.com/sol/hpack

name:           impossible
version:        1.0.3
synopsis:       Set of data and type definitions of impossible types. Impossible types are useful when declaring type classes / type families instances that should not be expanded by GHC until a specific type is provided in order to keep the types nice and readable.
category:       Data
stability:      experimental
homepage:       https://github.com/wdanilo/impossible
bug-reports:    https://github.com/wdanilo/impossible/issues
author:         Wojciech Danilo
maintainer:     Wojciech Danilo <wojciech.danilo@gmail.com>
copyright:      Copyright (C) 2015 Wojciech Danilo
license:        Apache-2.0
license-file:   LICENSE
build-type:     Simple
cabal-version:  >= 1.10

library
  hs-source-dirs:
      src
  default-extensions: ConstraintKinds DataKinds DefaultSignatures DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric DeriveTraversable DoAndIfThenElse EmptyDataDecls FlexibleContexts FlexibleInstances GeneralizedNewtypeDeriving InstanceSigs LambdaCase MultiParamTypeClasses OverloadedStrings StandaloneDeriving TemplateHaskell TupleSections TypeOperators ViewPatterns TypeFamilies
  ghc-options: -Wall -O2
  build-depends:
      base >=4.6 && <4.10
    , lens
  exposed-modules:
      Data.Impossible
  other-modules:
      Paths_impossible
  default-language: Haskell2010
